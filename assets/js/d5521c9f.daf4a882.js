"use strict";(self.webpackChunkmy_ibax=self.webpackChunkmy_ibax||[]).push([[330],{5975:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=s(4848),o=s(8453);const i={},t="Synchronized Monitoring Tool {#synchronized-monitoring-tool}",l={id:"reference/desync_monitor",title:"Synchronized Monitoring Tool",description:"synchronized-monitoring-tool}",source:"@site/docs/reference/desync_monitor.md",sourceDirName:"reference",slug:"/reference/desync_monitor",permalink:"/docs/reference/desync_monitor",draft:!1,unlisted:!1,editUrl:"https://github.com/IBAX-io/docs/edit/main/docs/reference/desync_monitor.md",tags:[],version:"current",frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Server Configuration File",permalink:"/docs/reference/backend-config"},next:{title:"JSON-RPC Application Programming Interface",permalink:"/docs/reference/json-rpc"}},d={},c=[{value:"Location",id:"location",level:2},{value:"Command prompt flags",id:"command-prompt-flags",level:2},{value:"Configuration",id:"configuration",level:2},{value:"nodes_list",id:"nodes-list",level:3},{value:"[daemon]",id:"daemon",level:3},{value:"[alert_message]",id:"alert-message",level:3},{value:"[smtp]",id:"smtp",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"synchronized-monitoring-tool",children:"Synchronized Monitoring Tool"}),"\n",(0,r.jsx)(n.p,{children:"Desync_monitor is a special tool that can be used to verify whether the database\non the specified node has been synchronized."}),"\n",(0,r.jsx)(n.p,{children:"The tool can be used as a daemon or can be started to perform a one-time check."}),"\n",(0,r.jsx)(n.p,{children:"The operating principle of the tool is based on the following:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Each block contains the hash of all changes of all transactions, request the\nspecified node to provide its last block ID;"}),"\n",(0,r.jsx)(n.li,{children:"Then request a block with this ID from all nodes and compare the above\nhashes;"}),"\n",(0,r.jsx)(n.li,{children:"If the hashes are different, a synchronization error message will be sent to\nthe email address specified in the command."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"location",children:"Location"}),"\n",(0,r.jsxs)(n.p,{children:["The tool is located in the ",(0,r.jsx)(n.code,{children:"tools/desync_monitor/"})," directory."]}),"\n",(0,r.jsx)(n.h2,{id:"command-prompt-flags",children:"Command prompt flags"}),"\n",(0,r.jsx)(n.p,{children:"The following flags can be used from the command prompt:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"confPath"})," - Path of the configuration file. The default file name is\n",(0,r.jsx)(n.code,{children:"config.toml"}),";"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"nodesList"})," - Node list of the requested block, separated by commas. The\ndefault is ",(0,r.jsx)(n.code,{children:"127.0.0.1:7079"}),";"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"daemonMode"})," - Started as a daemon and should be used when authentication is\nrequired every N seconds. This flag is set to ",(0,r.jsx)(n.code,{children:"false"})," by default;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"queryingPeriod"})," - If the tool is started as a daemon, this parameter sets\nthe time interval (in seconds) between checks, ",(0,r.jsx)(n.code,{children:"1"})," second by default."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"alertMessageTo"})," - The email address to which synchronization warning errors\nwill be sent.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"alertMessageSubj"})," - Message subject in the warning message, the\n",(0,r.jsx)(n.code,{children:"node synchronization"})," problem by default;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"alertMessageFrom"})," - Address where the message was sent;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"smtpHost"})," - SMTP server host, used to send emails, the ",(0,r.jsx)(n.code,{children:'""'})," by default;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"smtpPort"})," - SMTP server port, used to send email messages, ",(0,r.jsx)(n.code,{children:"25"})," by\ndefault;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"smtpUsername"})," - SMTP server username, ",(0,r.jsx)(n.code,{children:'""'})," by default;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"smtpPassword"})," - SMTP server password, ",(0,r.jsx)(n.code,{children:'""'})," by default."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The tool uses a configuration file in toml format."}),"\n",(0,r.jsx)(n.p,{children:"By default, it will look for the config.toml file in the folder where to start\nup the binary file."}),"\n",(0,r.jsxs)(n.p,{children:["The file path can be changed with the ",(0,r.jsx)(n.strong,{children:"configPath"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'nodes_list = ["http://127.0.0.1:7079", "http://127.0.0.1:7002"]\n\n[daemon]\ndaemon = false\nquerying_period = 1\n\n[alert_message]\nto = ""\nsubject = "problem with xxx nodes"\nfrom = ""\n\n[smtp]\nhost = ""\nport = 25\nusername = ""\npassword = ""\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nodes-list",children:"nodes_list"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"nodes_list - List of nodes (hosts) requesting information."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"daemon",children:"[daemon]"}),"\n",(0,r.jsx)(n.p,{children:"Configuration of the daemon mode."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"daemon_mode"})," -- A tool works as a daemon and performs synchronization\nchecks."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"querying_period"})," -- Time interval between synchronization checks."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alert-message",children:"[alert_message]"}),"\n",(0,r.jsx)(n.p,{children:"Warning message parameters."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"to"})," -- recipient's e-mail of synchronization error warning messages;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"subject"})," -- message subject;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"from"})," -- sender's e-mail."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"smtp",children:"[smtp]"}),"\n",(0,r.jsx)(n.p,{children:"Simple Mail Transfer Protocol (SMTP) server parameters, used to send\nsynchronization error messages."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"host"})," -- SMTP server hose;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"port"})," -- SMTP server port;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"username"})," -- SMTP server user name;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"password"})," --SMTP server password;"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(6540);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);