"use strict";(self.webpackChunkmy_ibax=self.webpackChunkmy_ibax||[]).push([[440],{4669:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=a(4848),i=a(8453);const s={},r="IBAX Development Tutorial {#ibax-development-tutorial}",c={id:"tutorials/tutorial",title:"IBAX Development Tutorial",description:"ibax-development-tutorial}",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/tutorials/tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/tutorial",permalink:"/docs/fr/tutorials/tutorial",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/ibax-docs/fr",tags:[],version:"current",frontMatter:{},sidebar:"tutorialsSidebar",previous:{title:"Tutorial for application development",permalink:"/docs/fr/tutorials/app_tutorial"}},o={},l=[{value:"Getting Started Guide",id:"getting-started-guide",level:2},{value:"Deployment",id:"deployment",level:2},{value:"Advanced Guide",id:"advanced-guide",level:2},{value:"Deploy first smart contract via command line tool",id:"deploy-first-smart-contract-via-command-line-tool",level:2},{value:"Create application",id:"create-application",level:3},{value:"Writing contracts",id:"writing-contracts",level:3},{value:"Create Contract",id:"create-contract",level:3},{value:"Command Line Tool Eco Development",id:"command-line-tool-eco-development",level:2},{value:"Step 1 Create Ecosystem",id:"step-1-create-ecosystem",level:3},{value:"Step 2 Create Application",id:"step-2-create-application",level:3},{value:"Step 3 Create Table",id:"step-3-create-table",level:3},{value:"Modify data table field permissions",id:"modify-data-table-field-permissions",level:4},{value:"Step 4 Create Application Parameters",id:"step-4-create-application-parameters",level:3},{value:"Step 5 Create Contract Deploy Contract",id:"step-5-create-contract-deploy-contract",level:3},{value:"Step 6 Create Ecosystem Parameters",id:"step-6-create-ecosystem-parameters",level:3},{value:"Step 7 add localization",id:"step-7-add-localization",level:3},{value:"Step 8 Modify the contract",id:"step-8-modify-the-contract",level:3},{value:"Step 9 Modify data table permissions",id:"step-9-modify-data-table-permissions",level:4},{value:"Deploy application using command line tools",id:"deploy-application-using-command-line-tools",level:2},{value:"Export Application",id:"export-application",level:3},{value:"Import Application",id:"import-application",level:3},{value:"Ecosystem configuration using command line tool",id:"ecosystem-configuration-using-command-line-tool",level:2},{value:"Apply to join the ecosystem",id:"apply-to-join-the-ecosystem",level:3},{value:"Add ecosystem members",id:"add-ecosystem-members",level:3},{value:"Freezing of accounts",id:"freezing-of-accounts",level:4},{value:"Role management",id:"role-management",level:3},{value:"New role creation",id:"new-role-creation",level:4},{value:"Adding Role Members",id:"adding-role-members",level:4},{value:"Delete role members",id:"delete-role-members",level:4},{value:"Modify Role Manager",id:"modify-role-manager",level:4},{value:"Delete Role",id:"delete-role",level:4},{value:"Issuance of Token",id:"issuance-of-token",level:3},{value:"Create Ecology",id:"create-ecosystem",level:4},{value:"Installing Basic Applications",id:"installing-basic-applications",level:4},{value:"Token Issuance",id:"token-issuance",level:4},{value:"Eco Deduction",id:"eco-deduction",level:3},{value:"DAO Governance Ecology",id:"dao-governance-ecosystem",level:3},{value:"Deploy applications using application packaging tool",id:"deploy-applications-using-application-packaging-tool",level:2}];function d(e){const n={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"ibax-development-tutorial",children:"IBAX Development Tutorial"}),"\n",(0,t.jsx)(n.h2,{id:"getting-started-guide",children:"Getting Started Guide"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#deploy-first-smart-contract-via-command-line-tool",children:"Deploy first smart contract via command line tool"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#command-line-tool-eco-development",children:"Command Line Tool Eco Development"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#deploy-application-using-command-line-tools",children:"Deploy application using command line tools"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#ecosystem-configuration-using-command-line-tool",children:"Ecosystem configuration using command line tool"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"advanced-guide",children:"Advanced Guide"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#deploy-applications-using-application-packaging-tool",children:"Deploy applications using application packaging tool"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-first-smart-contract-via-command-line-tool",children:"Deploy first smart contract via command line tool"}),"\n",(0,t.jsxs)(n.p,{children:["We will deploy ",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/thesaurus#smart-contract",children:"smart contracts"})," on the\nIBAX blockchain via the\n",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/ibax-cli",children:"command line tool"}),", and learn how to\ninvoke smart contracts."]}),"\n",(0,t.jsxs)(n.p,{children:["As our first smart contract, we deployed it to\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/blockchain-layers",children:"local test network"})," How to deploy a local\nnetwork you can refer to ",(0,t.jsx)(n.a,{href:"/docs/fr/howtos/deployment",children:"Network Deployment"}),", so you\ncan deploy and run it as you like without any overhead."]}),"\n",(0,t.jsx)(n.h3,{id:"create-application",children:"Create application"}),"\n",(0,t.jsxs)(n.p,{children:["Call the contract @1NewApplication to create the application, which has an\napplication name parameter and a modify\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#access-rights-control-mechanism",children:"permission parameter"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1  $ ibax-cli console\n2\n3  Welcome to the IBAX console!\n4  To exit, press ctrl-d or type exit\n5  >callContract @1NewApplication {"Name": "testapp", "Conditions": "ContractConditions(\\"@1DeveloperCondition\\")"}\n6\n7  {\n8    "block_id": 1217,\n9    "hash": "6327161d2202c33c06d34ab4ed9b509c05fc2cbb15cf260c6d3d404a6f640028",\n10   "penalty": 0,\n11   "err": "31"\n12 }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Line 1, start command line terminal."}),"\n",(0,t.jsxs)(n.li,{children:["Line 5, call the contract @1NewApplication to create an application with the\napplication name ",(0,t.jsx)(n.code,{children:"testapp"})," and the application modification permission\n",(0,t.jsx)(n.code,{children:"@1DeveloperCondition"})," with developer permission."]}),"\n",(0,t.jsx)(n.li,{children:"Row 8, the block id generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 9, the block hash generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 10, if the transaction execution fails (0: no penalty 1: penalty)."}),"\n",(0,t.jsx)(n.li,{children:"On line 11, if the transaction execution fails, an error text message is\nreturned, and if the block id is returned, the err field is the id of the\napplication."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Of course if you want to see what fields and field types are available in this\ncontract, you can call the ",(0,t.jsx)(n.code,{children:"getContractInfo"})," method, which will return the\ncontract information as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>getContractInfo @1NewApplication\n\n{\n    "id": 5022,\n    "state": 1,\n    "tableid": "22",\n    "walletid": "0",\n    "tokenid": "1",\n    "address": "0000-0000-0000-0000-0000",\n    "fields": [\n        {\n            "name": "Name",\n            "type": "string",\n            "optional": false\n        },\n        {\n            "name": "Conditions",\n            "type": "string",\n            "optional": false\n        },\n        {\n            "name": "VotingId",\n            "type": "int",\n            "optional": true\n        }\n    ],\n    "name": "@1NewApplication",\n    "app_id": 1,\n    "ecosystem": 1,\n    "conditions": "ContractConditions(\\"@1DeveloperCondition\\")"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"fields"})," field is the parameters of the contract, including the name of the\nparameter ",(0,t.jsx)(n.code,{children:"name"}),", ",(0,t.jsx)(n.code,{children:"type"}),", ",(0,t.jsx)(n.code,{children:"optional"}),", ",(0,t.jsx)(n.code,{children:"Name"})," and ",(0,t.jsx)(n.code,{children:"Conditions"})," are required,\n",(0,t.jsx)(n.code,{children:"VotingId"})," is optional, refer to\n",(0,t.jsx)(n.a,{href:"/docs/fr/reference/api2#contract-name",children:"contract/name"})," API method."]}),"\n",(0,t.jsx)(n.h3,{id:"writing-contracts",children:"Writing contracts"}),"\n",(0,t.jsxs)(n.p,{children:["We use ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#needle-contract-language",children:"Needle"})," to write a smart\ncontract that We implement a simple addition operation, the source code of the\ncontract is as follows, we save the contract as ",(0,t.jsx)(n.code,{children:"SumMath.sim"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"1    contract SumMath {\n2        data {\n3            A int\n4            B int\n5        }\n6        conditions {\n7\n8        }\n9        action {\n10            var sum int\n11            sum = $A + $B\n12            $result = sum\n13        }\n14    }\n"})}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"In line 1, we define a contract with the name SumMath."}),"\n",(0,t.jsxs)(n.li,{children:["Line 2, ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#data-section",children:"Data Section"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["In lines 3-4, we define two input 64-bit integer-type parameters ",(0,t.jsx)(n.code,{children:"A B"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Line 6, ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#conditions-section",children:"Conditional Section"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Line 9, ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#action-section",children:"Operations Section"})," We define a\nvariable sum to receive the result of A+B. Assign the value of sum to ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"r"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"u"}),(0,t.jsx)(n.mi,{children:"l"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mo,{separator:"true",children:","}),(0,t.jsx)(n.mi,{children:"a"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"h"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"r"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"u"}),(0,t.jsx)(n.mi,{children:"l"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"o"}),(0,t.jsx)(n.mi,{children:"f"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"h"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"c"}),(0,t.jsx)(n.mi,{children:"o"}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"r"}),(0,t.jsx)(n.mi,{children:"a"}),(0,t.jsx)(n.mi,{children:"c"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{mathvariant:"normal",children:"."}),(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mi,{children:"f"}),(0,t.jsx)(n.mi,{children:"c"}),(0,t.jsx)(n.mi,{children:"o"}),(0,t.jsx)(n.mi,{children:"u"}),(0,t.jsx)(n.mi,{children:"r"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"i"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"i"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"p"}),(0,t.jsx)(n.mi,{children:"o"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"i"}),(0,t.jsx)(n.mi,{children:"b"}),(0,t.jsx)(n.mi,{children:"l"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"o"}),(0,t.jsx)(n.mi,{children:"a"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mi,{children:"i"}),(0,t.jsx)(n.mi,{children:"g"}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"h"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"v"}),(0,t.jsx)(n.mi,{children:"a"}),(0,t.jsx)(n.mi,{children:"l"}),(0,t.jsx)(n.mi,{children:"u"}),(0,t.jsx)(n.mi,{children:"e"}),(0,t.jsx)(n.mi,{children:"o"}),(0,t.jsx)(n.mi,{children:"f"}),(0,t.jsx)(n.mi,{children:"A"}),(0,t.jsx)(n.mo,{children:"+"}),(0,t.jsx)(n.mi,{children:"B"}),(0,t.jsx)(n.mi,{children:"t"}),(0,t.jsx)(n.mi,{children:"o"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"result,\nas the result of the contract. Of course it is possible to assign the value of\nA+B to "})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"res"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"u"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"lt"}),(0,t.jsx)(n.span,{className:"mpunct",children:","}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"a"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"eres"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"u"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"lt"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"o"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"eco"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"a"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"c"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord",children:"."}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"co"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"u"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"rse"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"i"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"i"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"oss"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"ib"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"o"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"a"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"ss"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"i"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"a"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"u"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"eo"}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"A"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"+"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"Bt"}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"o"})]})]})]}),"result directly, but it can be shown as an example."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"create-contract",children:"Create Contract"}),"\n",(0,t.jsx)(n.p,{children:"There are two ways to create a contract, the first of which is:"}),"\n",(0,t.jsx)(n.p,{children:"In the first step we write a contract parameter file in json format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "ApplicationId": 31,\n  "Value": "contract SumMath {\\n    data {\\n        A int\\n        B int\\n    }\\n    conditions {\\n\\n    }\\n    action {\\n        var sum int\\n        sum = $A + $B\\n        $result = sum\\n    }\\n}",\n  "Conditions": "ContractConditions(\\"@1DeveloperCondition\\")"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["where ",(0,t.jsx)(n.code,{children:"ApplicationId"})," is the application id, ",(0,t.jsx)(n.code,{children:"Value"})," is the contract source\ncode, need to escape special characters, ",(0,t.jsx)(n.code,{children:"Conditions"})," is the contract\nmodification rights."]}),"\n",(0,t.jsxs)(n.p,{children:["We named it ",(0,t.jsx)(n.code,{children:"SumMathParams.json"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The second step calls to create a contract @1NewContract:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'1    >callContract @1NewContract -f=./data/SumMathParams.json\n2    {\n3        "block_id": 1238,\n4        "hash": "f3fe7aff8a613c96299723b7e9af0682aa8cabe7becf67a485e2a77a974f58b6",\n5        "penalty": 0,\n6        "err": "328"\n7    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"Second method:"}),"\n",(0,t.jsxs)(n.p,{children:["The saved contract source file is passed directly into the contract parameters\nin the parameter format ",(0,t.jsx)(n.code,{children:"paramsName"})," + ",(0,t.jsx)(n.code,{children:"-"}),' + "file",',(0,t.jsx)(n.code,{children:"paramsName-file"})," as\nfollows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'1    >callContract @1NewContract {"ApplicationId": 31, "Value-file": "SumMath.sim", "Conditions": "true"}\n2    {\n3        "block_id": 2055,\n4        "hash": "cdf25060669cf7cba137278...26ca463fd5d458f3402a5f0137f693db",\n5        "penalty": 0,\n6        "err": "368"\n7    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Line 1: Call the contract @1NewContract to create the contract, -f uses the\nfile to import the contract parameters."}),"\n",(0,t.jsx)(n.li,{children:"Row 3, the block id generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 4, the block hash generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 5, if the transaction execution fails (0: no penalty 1: penalty)."}),"\n",(0,t.jsx)(n.li,{children:"Line 6, if the transaction execution fails, an error text message is returned,\nand if the block id is returned, the err field is the id of the contract."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Let's try calling the contract we just deployed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'1  >callContract @5SumMath {"A":1, "B":2}\n2\n3  {\n4      "block_id": 1239,\n5      "hash": "7fa09da0b9f65634119a910f9d91aaf4927208278efd62961499ef7e4f4c8c9c",\n6      "penalty": 0,\n7      "err": "3"\n8  }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The call is completed and the result is as expected, as explained below by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The first line calls the contract, here we deploy the smart contract to the\necosystem with ecosystem id 5, of course, if the current ecosystem id is 5, in\nthe same ecosystem, you can also call ",(0,t.jsx)(n.code,{children:'callContract SumMath {"A":1, "B":2}'})," in\nthis way."]}),"\n",(0,t.jsx)(n.li,{children:"Line 3, the block id generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 4, the block hash generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 5, if the transaction execution fails (0: no penalty 1: penalty)."}),"\n",(0,t.jsxs)(n.li,{children:["Line 6, if the transaction execution fails, an error text message is returned,\nand if the block id is returned, the err field is the result of the contract,\nwhich is the value of ",(0,t.jsx)(n.code,{children:"$result"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"command-line-tool-eco-development",children:"Command Line Tool Eco Development"}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, you will learn how to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["1.",(0,t.jsx)(n.a,{href:"#step-1-create-ecosystem",children:"Create Ecosystem"})]}),"\n",(0,t.jsxs)(n.li,{children:["2.",(0,t.jsx)(n.a,{href:"#step-2-create-application",children:"Create Application"})]}),"\n",(0,t.jsxs)(n.li,{children:["3.",(0,t.jsx)(n.a,{href:"#step-3-create-table",children:"Create Table"})]}),"\n",(0,t.jsxs)(n.li,{children:["4.",(0,t.jsx)(n.a,{href:"#step-4-create-application-parameters",children:"Create Application Parameters"})]}),"\n",(0,t.jsxs)(n.li,{children:["5.",(0,t.jsx)(n.a,{href:"#step-5-create-contract-deploy-contract",children:"Create & Deploy Contract"})]}),"\n",(0,t.jsxs)(n.li,{children:["6.",(0,t.jsx)(n.a,{href:"#step-6-create-ecosystem-parameters",children:"Create Ecosystem Parameters"})]}),"\n",(0,t.jsxs)(n.li,{children:["7.",(0,t.jsx)(n.a,{href:"#step-7-add-localization",children:"Add Localization"})]}),"\n",(0,t.jsxs)(n.li,{children:["8.",(0,t.jsx)(n.a,{href:"#step-8-modify-the-contract",children:"Modify Contract"})]}),"\n",(0,t.jsxs)(n.li,{children:["9.",(0,t.jsx)(n.a,{href:"#step-9-modify-data-table-permissions",children:"Modify data table permissions"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In order to understand more clearly how the IBAX ecosystem and applications are\nlike and what they do, it is preferred that we understand where the ecosystem\nand applications should belong, and we can understand better with a simple mind\nmap: ",(0,t.jsx)(n.img,{alt:"image",src:a(4963).A+"",width:"1922",height:"1242"})]}),"\n",(0,t.jsxs)(n.p,{children:["It can be seen that IBAX networks can have many\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#ecolib",children:"Ecosystems"}),". Each ecosystem can have\nmultiple ",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#applications",children:"applications"}),". Each\napplication has ",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/thesaurus#smart-contract",children:"contract"}),".\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#tables",children:"Tables"}),". ecosystem has ecosystem\nparameters, application has application parameters."]}),"\n",(0,t.jsx)(n.h3,{id:"step-1-create-ecosystem",children:"Step 1 Create Ecosystem"}),"\n",(0,t.jsxs)(n.p,{children:["We start by creating an ecosystem using the\n",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/ibax-cli",children:"command line tool"}),", calling the contract\n@1NewEcosystem. If you want to change the ecosystem name, you can call the\n",(0,t.jsx)(n.code,{children:"@1EditEcosystemName"})," contract."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'1    $ ibax-cli console\n2\n3    Welcome to the IBAX console!\n4    To exit, press ctrl-d or type exit\n5    >callContract @1NewEcosystem {"Name": "goodBoy school"}\n6\n7    {\n8        "block_id": 1199,\n9        "hash": "a1dc90c1772545c16394b9521...227676b27b145743556a8973dd",\n10       "penalty": 0,\n11       "err": "18"\n12   }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Line 1, which starts the command line console program."}),"\n",(0,t.jsxs)(n.li,{children:["Line 5, call the contract ",(0,t.jsx)(n.code,{children:"@1NewEcosystem"})," to create an ecosystem with the\nname test ecosystem."]}),"\n",(0,t.jsx)(n.li,{children:"Line 8, the block id generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 9, the block hash generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 10, if the transaction execution fails (0: no penalty 1: penalty)."}),"\n",(0,t.jsxs)(n.li,{children:["Line 11, if the transaction execution fails, an error text message is\nreturned, and if the block id is returned, the err field is the id of the\necosystem as ",(0,t.jsx)(n.code,{children:"18"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Then we configure the command tool ",(0,t.jsx)(n.code,{children:"config.yml"}),", set ",(0,t.jsx)(n.code,{children:"ecosystem"})," to the created\necid ",(0,t.jsx)(n.code,{children:"18"})," and restart the command line console program."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:">exit\nINFO[0002] Exit\n\n$ vim data/config.yml\n\n$ ibax-cli console\n\nWelcome to the IBAX console!\nTo exit, press ctrl-d or type exit\n>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-2-create-application",children:"Step 2 Create Application"}),"\n",(0,t.jsxs)(n.p,{children:["Call the contract ",(0,t.jsx)(n.code,{children:"@1NewApplication"})," to create the application, which has an\napplication name parameter and a modify\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#access-rights-control-mechanism",children:"Permission Parameter"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1  >callContract @1NewApplication {"Name": "GradesRecorder", "Conditions": "ContractConditions(\\"@1DeveloperCondition\\")"}\n2\n3  {\n4     "block_id": 1246,\n5     "hash": "85ab8953d26d0d1047fc610866115331babfaf88c80792d50b41826185c9f6f8",\n6     "penalty": 0,\n7     "err": "47"\n8  }\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you need to modify the application permissions, you can call the\n",(0,t.jsx)(n.code,{children:"EditApplication"})," contract."]}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Line 1, call the contract @1NewApplication to create an application, the\napplication name is ",(0,t.jsx)(n.code,{children:"GradesRecorder"}),", the application modification permission\nis developer permission ",(0,t.jsx)(n.code,{children:"@1DeveloperCondition"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Line 4, the block id generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 5, the block hash generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 6, if the transaction execution fails (0: no penalty 1: penalty)."}),"\n",(0,t.jsxs)(n.li,{children:["Line 7, if the transaction execution fails, an error text message is returned,\nand if the block id is returned, the err field the id of the application is\n",(0,t.jsx)(n.code,{children:"47"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Let's write a simple example of an application that keeps track of students'\ngrades."}),"\n",(0,t.jsxs)(n.p,{children:["The data table fields include student information, grade ",(0,t.jsx)(n.code,{children:"grade"}),", class ",(0,t.jsx)(n.code,{children:"class"}),",\nsubject grades ",(0,t.jsx)(n.code,{children:"mathematics,physics,literature"}),", and Composite score\n",(0,t.jsx)(n.code,{children:"overall_score"}),", rating ",(0,t.jsx)(n.code,{children:"score"}),", creation timestamp (ms) ",(0,t.jsx)(n.code,{children:"created_at"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"step-3-create-table",children:"Step 3 Create Table"}),"\n",(0,t.jsx)(n.p,{children:"In the first step we write a contract parameter file in json format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "ApplicationId": 47,\n  "Name": "grade_info",\n  "ColumnsArr": [\n    "student",\n    "grade",\n    "class",\n    "mathematics",\n    "physics",\n    "literature",\n    "overall_score",\n    "score",\n    "created_at"\n  ],\n  "TypesArr": [\n    "varchar",\n    "number",\n    "number",\n    "number",\n    "number",\n    "number",\n    "number",\n    "varchar",\n    "number"\n  ],\n  "InsertPerm": "ContractConditions(\\"MainCondition\\")",\n  "UpdatePerm": "ContractConditions(\\"MainCondition\\")",\n  "ReadPerm": "true",\n  "NewColumnPerm": "ContractConditions(\\"MainCondition\\")"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["where ",(0,t.jsx)(n.code,{children:"ApplicationId"})," is the application id,",(0,t.jsx)(n.code,{children:"Name"})," is the name of the created\ndata table ",(0,t.jsx)(n.code,{children:"test_teble"}),". ",(0,t.jsx)(n.code,{children:"ColumnsArr"})," is an array of data table fields,\n",(0,t.jsx)(n.code,{children:"TypesArr"})," is the type of data table fields, including 9\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#tables",children:"types"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"varchar"}),",",(0,t.jsx)(n.code,{children:"character"}),",",(0,t.jsx)(n.code,{children:"json"}),",",(0,t.jsx)(n.code,{children:"number"}),",",(0,t.jsx)(n.code,{children:"datetime"}),",",(0,t.jsx)(n.code,{children:"double"}),",",(0,t.jsx)(n.code,{children:"money"}),",",(0,t.jsx)(n.code,{children:"text"}),",",(0,t.jsx)(n.code,{children:"bytea"}),",\nthe field name and the field type are one-to-one correspondence. ",(0,t.jsx)(n.code,{children:"InsertPerm"}),"\nfor data table new entry permission, ",(0,t.jsx)(n.code,{children:"UpdatePerm"})," for data table update entry\npermission, ",(0,t.jsx)(n.code,{children:"ReadPerm"})," for data table data read permission, ",(0,t.jsx)(n.code,{children:"NewColumnPerm"})," for\nnew data table field permission."]}),"\n",(0,t.jsxs)(n.p,{children:["Referring to\n",(0,t.jsx)(n.a,{href:"/docs/fr/concepts/about-the-platform#access-rights-control-mechanism",children:"Permission Control"}),",\nhere ",(0,t.jsx)(n.code,{children:'ContractConditions(\\"MainCondition\\")'})," is available for the current\necosystem creator."]}),"\n",(0,t.jsxs)(n.p,{children:["We name it createTable.json, and then call the contract to create the data table\n",(0,t.jsx)(n.code,{children:"@1NewTableJoint"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:">callContract @1NewTableJoint -f ./createTestTable.json\n"})}),"\n",(0,t.jsx)(n.h4,{id:"modify-data-table-field-permissions",children:"Modify data table field permissions"}),"\n",(0,t.jsxs)(n.p,{children:["We can modify the data table field permissions, data table field permissions\ninclude read permissions and update permissions, where read permissions, in the\ncontract using ",(0,t.jsx)(n.code,{children:"DBFind.Columns"})," filter fields or interfaces such as\n",(0,t.jsx)(n.a,{href:"/docs/fr/reference/api2#list-name-limit-offset-columns",children:"list"})," query, if there is\nno permission, it will report a permission error."]}),"\n",(0,t.jsxs)(n.p,{children:["The update permission is the permission to update the data table fields. We set\nthe ",(0,t.jsx)(n.code,{children:"student"})," field read and update permissions to ",(0,t.jsx)(n.code,{children:"false"}),", but of course it can\nbe set to be operable by some contract."]}),"\n",(0,t.jsxs)(n.p,{children:["Call the ",(0,t.jsx)(n.code,{children:"@1EditColumn"})," contract to modify the data table field permissions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1EditColumn {"TableName": "grade_info", "Name": "student", "UpdatePerm": "false", "ReadPerm": "false"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We can create several application\nparameters",(0,t.jsx)(n.code,{children:"grade_best_type"}),",",(0,t.jsx)(n.code,{children:"grade_type_a+"}),",",(0,t.jsx)(n.code,{children:"grade_type_a"}),",",(0,t.jsx)(n.code,{children:"grade_type_b+"}),",",(0,t.jsx)(n.code,{children:"grade_type_b"}),",",(0,t.jsx)(n.code,{children:"grade_type_c"}),",\ngrade rating type."]}),"\n",(0,t.jsx)(n.h3,{id:"step-4-create-application-parameters",children:"Step 4 Create Application Parameters"}),"\n",(0,t.jsxs)(n.p,{children:["Call the contract ",(0,t.jsx)(n.code,{children:"@1NewAppParam"})," to create the application parameters, if you\nwant to modify the application parameters you can call the contract\n",(0,t.jsx)(n.code,{children:"@1EditAppParam"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>callContract @1NewAppParam {"ApplicationId": 47, "Name": "grade_best_type", "Value": "A+", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n>callContract @1NewAppParam {"ApplicationId": 47, "Name": "grade_type_a+", "Value": "{\\"max\\": 101,\\"min\\": 90}", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n>callContract @1NewAppParam {"ApplicationId": 47, "Name": "grade_type_a", "Value": "{\\"max\\": 90,\\"min\\": 80}", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n>callContract @1NewAppParam {"ApplicationId": 47, "Name": "grade_type_b+", "Value": "{\\"max\\": 80,\\"min\\": 70}", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n>callContract @1NewAppParam {"ApplicationId": 47, "Name": "grade_type_b", "Value": "{\\"max\\": 70,\\"min\\": 60}", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n>callContract @1NewAppParam {"ApplicationId": 47, "Name": "grade_type_c", "Value": "{\\"max\\": 60,\\"min\\": 0}", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["where ",(0,t.jsx)(n.code,{children:"grade_best_type"})," is the best rating type. ",(0,t.jsx)(n.code,{children:"grade_type_a+"})," is the\ncondition triggered by the rating ",(0,t.jsx)(n.code,{children:"A+"}),", when the score is greater than or equal\nto 90 and less than 101, the rating is",(0,t.jsx)(n.code,{children:"A+"}),", other parameters are similar."]}),"\n",(0,t.jsx)(n.h3,{id:"step-5-create-contract-deploy-contract",children:"Step 5 Create Contract Deploy Contract"}),"\n",(0,t.jsx)(n.p,{children:"We create a contract to record the student's grade information and final rating\nfor each subject, and enter the student's grade class and grade for each subject\nwhen entering the information."}),"\n",(0,t.jsxs)(n.p,{children:["Based on the input scores of each subject, the average calculation is done to\nget the overall score ",(0,t.jsx)(n.code,{children:"overallScore"})," and the final rating",(0,t.jsx)(n.code,{children:"score"}),". When the\ncontract is called, it will create a record to the data table we just created\n",(0,t.jsx)(n.code,{children:"grade_info"})]}),"\n",(0,t.jsxs)(n.p,{children:["First we write a contract and name it ",(0,t.jsx)(n.code,{children:"NewRecord.sim"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1 contract NewRecord {\n2       data {\n3         Student string\n4         Grade int\n5         Class int\n6         Mathematics int\n7         Physics int\n8         Literature int\n9       }\n10     func getScore(a b c int) map{\n11          var m map\n12          var overallScore int\n13          overallScore = (a+b+c) / 3\n14          m["overallScore"] = overallScore\n15          if overallScore >= $gradeTypeABest["min"] && overallScore < $gradeTypeABest["max"] {\n16              m["score"] = "A+"\n17          }elif overallScore >= $gradeTypeA["min"] && overallScore < $gradeTypeA["max"] {\n18              m["score"] = "A"\n19          }elif overallScore >= $gradeTypeBBest["min"] && overallScore < $gradeTypeBBest["max"] {\n20              m["score"] = "B+"\n21          }elif overallScore >= $gradeTypeB["min"] && overallScore < $gradeTypeB["max"] {\n22              m["score"] = "B"\n23          }elif overallScore >= $gradeTypeC["min"] && overallScore < $gradeTypeC["max"]{\n24              m["score"] = "C"\n25          }else{\n26              m["score"] = "Notset"\n27          }\n28          return m\n29      }\n30      func safeJsonDecode(m string) map {\n31          var res map\n32          if Size(m) > 0 {\n33             res = JSONDecode(m)\n34          }\n35          return res\n36      }\n37\n38      conditions {\n39          if Size($Student) == 0 {\n40            warning "Student Can not be empty"\n41          }\n42          if $Class <= 0{\n43              warning "Class cannot be less than or equal to zero"\n44          }\n45          if $Grade <= 0{\n46              warning "Grade cannot be less than or equal to zero"\n47          }\n48          if $Mathematics < 0 {\n49              warning "Mathematics cannot be less than zero"\n50          }\n51          if $Physics < 0 {\n52              warning "Physics cannot be less than zero"\n53          }\n54          if $Literature < 0 {\n55              warning "Literature cannot be less than zero"\n56          }\n57          if $Mathematics > 100 || $Physics > 100 ||  $Literature > 100{\n58              warning "Score cannot exceed 100"\n59          }\n60          var app map\n61          app = DBFind("@1applications").Columns("id,ecosystem").Where({"ecosystem": 18,"name":"GradesRecorder","deleted":0}).Row()\n62          if !app {\n63              warning LangRes("@1app_not_found")\n64          }\n65\n66          var app_id int\n67          app_id = Int(app["id"])\n68          $eId = Int(app["ecosystem"])\n69          $gradeBestType = AppParam(app_id, "grade_best_type", $eId)\n70          $gradeTypeABest = safeJsonDecode(AppParam(app_id, "grade_type_a+", $eId))\n71          $gradeTypeA = safeJsonDecode(AppParam(app_id, "grade_type_a", $eId))\n72          $gradeTypeBBest = safeJsonDecode(AppParam(app_id, "grade_type_b+", $eId))\n73          $gradeTypeB = safeJsonDecode(AppParam(app_id, "grade_type_b", $eId))\n74          $gradeTypeC = safeJsonDecode(AppParam(app_id, "grade_type_c", $eId))\n75      }\n76      action {\n77          var m map\n78          m = getScore($Mathematics,$Physics,$Literature)\n79          var in map\n80          in["student"] = $Student\n81          in["class"] = $Class\n82          in["grade"] = $Grade\n83          in["mathematics"] = $Mathematics\n84          in["physics"] = $Physics\n85          in["literature"] = $Literature\n86          in["overall_score"] = m["overallScore"]\n87          in["score"] = m["score"]\n88          in["created_at"] = $time\n89          DBInsert("@"+ Str($eId)+"grade_info", in)\n90      }\n91  }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Line 2, ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#data-section",children:"data section"})," defines the input\nparameters ",(0,t.jsx)(n.code,{children:"Student"})," student name, ",(0,t.jsx)(n.code,{children:"Grade"})," grade, ",(0,t.jsx)(n.code,{children:"Class"})," class, ",(0,t.jsx)(n.code,{children:"Mathematics"}),"\nmath score, ",(0,t.jsx)(n.code,{children:" Physics"}),"Physics score,",(0,t.jsx)(n.code,{children:"Literature"}),"Literature score."]}),"\n",(0,t.jsx)(n.li,{children:"Line 10, the getScore function, produces a composite score and final rating\nbased on each subject's score."}),"\n",(0,t.jsx)(n.li,{children:"Line 30, safeJsonDecode function, json decode the string and convert to map."}),"\n",(0,t.jsxs)(n.li,{children:["Line 38, ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#conditions-section",children:"conditional section"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Line 39, ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#action-section",children:"operation section"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["As you can see, when the contract is called, it first goes through the\nconditional part, verifying that the contract input parameters are valid, such\nas whether the student name ",(0,t.jsx)(n.code,{children:"if Size($Student) == 0 {"})," is empty (line 39), and\nif it is, then an error message is returne ",(0,t.jsx)(n.code,{children:'"Student Can not be empty"'})," (line\n30), after all input parameters have been verified, on line 61, use\n",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#dbfind",children:"DBFind"})," to retrieve the information from the\ndatabase for the application with the ecid ",(0,t.jsx)(n.code,{children:"18"})," and the application name\n",(0,t.jsx)(n.code,{children:" GradesRecorder"})," and the application information with ",(0,t.jsx)(n.code,{children:"deleted=0"})," is not\ndeleted."]}),"\n",(0,t.jsxs)(n.p,{children:["Lines 69-74, use ",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#appparam",children:"AppParam"})," to retrieve the\napplication parameters, e.g.\n",(0,t.jsx)(n.code,{children:'$gradeBestType = AppParam(app_id, "grade_best_type", $ eId)'})," (line 69)."]}),"\n",(0,t.jsxs)(n.p,{children:["If the application parameter is stored in json format, such as ",(0,t.jsx)(n.code,{children:"grade_type_a"}),",\nyou can refer to\n",(0,t.jsx)(n.code,{children:'$gradeTypeABest = safeJsonDecode(AppParam(app_id, "grade_type_a+", $eId))'}),",\nwhich will get the application parameter by safeJsonDecode function to map\nformat."]}),"\n",(0,t.jsxs)(n.p,{children:["Then execute to the operation part, call the getScore function to get the\nresulting composite score and final rating (line 10), use map to store, line 79,\ndefine a map to store student achievement information, and\n",(0,t.jsx)(n.a,{href:"/docs/fr/topics/script#dbinsert",children:"DBInsert"})," Insert data to data\ntable",(0,t.jsx)(n.code,{children:"@18grade_info"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"There are two ways to create a contract, the first of which is:"}),"\n",(0,t.jsx)(n.p,{children:"First we write a contract parameter file in json format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "ApplicationId": 47,\n  "Value": "contract NewRecord {\\n    data {\\n        Student string\\n        Grade int\\n        Class int\\n        Mathematics int\\n        Physics int\\n        Literature int\\n    }\\n    func getScore(a b c int) map{\\n        var m map\\n        var overallScore int\\n        overallScore = (a+b+c) / 3\\n        m[\\"overallScore\\"] = overallScore\\n        if overallScore >= $gradeTypeABest[\\"min\\"] && overallScore < $gradeTypeABest[\\"max\\"] {\\n            m[\\"score\\"] = \\"A+\\"\\n        }elif overallScore >= $gradeTypeA[\\"min\\"] && overallScore < $gradeTypeA[\\"max\\"] {\\n            m[\\"score\\"] = \\"A\\"\\n        }elif overallScore >= $gradeTypeBBest[\\"min\\"] && overallScore < $gradeTypeBBest[\\"max\\"] {\\n            m[\\"score\\"] = \\"B+\\"\\n        }elif overallScore >= $gradeTypeB[\\"min\\"] && overallScore < $gradeTypeB[\\"max\\"] {\\n            m[\\"score\\"] = \\"B\\"\\n        }elif overallScore >= $gradeTypeC[\\"min\\"] && overallScore < $gradeTypeC[\\"max\\"]{\\n            m[\\"score\\"] = \\"C\\"\\n        }else{\\n            m[\\"score\\"] = \\"Notset\\"\\n        }\\n        return m\\n    }\\n    func safeJsonDecode(m string) map {\\n        var res map\\n        if Size(m) > 0 {\\n            res = JSONDecode(m)\\n        }\\n        return res\\n    }\\n\\n    conditions {\\n        if Size($Student) == 0 {\\n            warning \\"Student Can not be empty\\"\\n        }\\n        if $Class <= 0{\\n            warning \\"Class cannot be less than or equal to zero\\"\\n        }\\n         if $Grade <= 0{\\n            warning \\"Grade cannot be less than or equal to zero\\"\\n        }\\n        if $Mathematics < 0 {\\n            warning \\"Mathematics cannot be less than zero\\"\\n        }\\n        if $Physics < 0 {\\n            warning \\"Physics cannot be less than zero\\"\\n        }\\n        if $Literature < 0 {\\n            warning \\"Literature cannot be less than zero\\"\\n        }\\n        if $Mathematics > 100 || $Physics > 100 ||  $Literature > 100{\\n            warning \\"Score cannot exceed 100\\"\\n        }\\n        var app map\\n        app = DBFind(\\"@1applications\\").Columns(\\"id,ecosystem\\").Where({\\"ecosystem\\": 18,\\"name\\":\\"GradesRecorder\\",\\"deleted\\":0}).Row()\\n        if !app {\\n            warning LangRes(\\"@1app_not_found\\")\\n        }\\n\\n        var app_id int\\n        app_id = Int(app[\\"id\\"])\\n        $eId = Int(app[\\"ecosystem\\"])\\n        $gradeBestType = AppParam(app_id, \\"grade_best_type\\", $eId)\\n        $gradeTypeABest = safeJsonDecode(AppParam(app_id, \\"grade_type_a+\\", $eId))\\n        $gradeTypeA = safeJsonDecode(AppParam(app_id, \\"grade_type_a\\", $eId))\\n        $gradeTypeBBest = safeJsonDecode(AppParam(app_id, \\"grade_type_b+\\", $eId))\\n        $gradeTypeB = safeJsonDecode(AppParam(app_id, \\"grade_type_b\\", $eId))\\n        $gradeTypeC = safeJsonDecode(AppParam(app_id, \\"grade_type_c\\", $eId))\\n    }\\n    action {\\n        var m map \\n        m = getScore($Mathematics,$Physics,$Literature)\\n        var in map\\n        in[\\"student\\"] = $Student\\n        in[\\"class\\"] = $Class\\n        in[\\"grade\\"] = $Grade\\n        in[\\"mathematics\\"] = $Mathematics\\n        in[\\"physics\\"] = $Physics \\n        in[\\"literature\\"] = $Literature \\n        in[\\"overall_score\\"] = m[\\"overallScore\\"]\\n        in[\\"score\\"] = m[\\"score\\"]\\n        in[\\"created_at\\"] = $time\\n        DBInsert(\\"@\\"+ Str($eId)+\\"grade_info\\", in)\\n    }\\n}",\n  "Conditions": "ContractConditions(\\"@1DeveloperCondition\\")"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"ApplicationId"})," is the application id, which needs to be escaped for\nspecial characters, and ",(0,t.jsx)(n.code,{children:"Conditions"})," is the contract modification permission."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Value"})," contract source code, which we save as ",(0,t.jsx)(n.code,{children:"NewRecordParams.json"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:["After writing the contract, we need to deploy the contract by calling\nCreateContract",(0,t.jsx)(n.code,{children:"@1NewContract"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1    >>callContract @1NewContract -f=./data/NewRecordParams.json\n2    {\n3        "block_id": 1262,\n4        "hash": "d896f12f685835f6cf71705e1ba...4d8bcc0a1406f7b0b6482b2d230fc",\n5        "penalty": 0,\n6        "err": "348"\n7    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following is explained by line:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Line 1: call contract ",(0,t.jsx)(n.code,{children:"@1NewContract"})," to create the contract, -f uses the file\nto import the just created file ",(0,t.jsx)(n.code,{children:"NewRecord.json"})," as the contract parameter."]}),"\n",(0,t.jsx)(n.li,{children:"Line 3, the block id generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 4, the block hash generated by the transaction."}),"\n",(0,t.jsx)(n.li,{children:"Line 5, if the transaction execution fails (0: no penalty 1: penalty)."}),"\n",(0,t.jsxs)(n.li,{children:["Line 6, if the transaction execution fails, an error text message is returned,\nand if the block id is returned, the err field the id of the contract is\n",(0,t.jsx)(n.code,{children:"348"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Second method:"}),"\n",(0,t.jsxs)(n.p,{children:["The saved contract source file is passed directly into the contract parameters\nin the parameter format ",(0,t.jsx)(n.code,{children:"paramsName"})," + ",(0,t.jsx)(n.code,{children:"-"}),' + "file",',(0,t.jsx)(n.code,{children:"paramsName-file"})," as\nfollows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'callContract @1NewContract {"ApplicationId": 47, "Value-file": "NewRecord.sim", "Conditions": "ContractConditions(\\"@1DeveloperCondition\\ ")"}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Let's try to call the contract we just created."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1  >callContract @18NewRecord {"Student": "tom", "Grade": 1, "Class": 1, "Mathematics": 18, "Physics": 57, "Literature": 93}\n2\n3  {\n4     "block_id": 1263,\n5     "hash": "1b964a47fe6c5fd43ea55a752d01edb5ad576432fd6f63315344d87999a0473d",\n6     "penalty": 0,\n7     "err": ""\n8  }\n'})}),"\n",(0,t.jsx)(n.p,{children:"The call is complete, and then we check to see if the data table has saved a\nrecord."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>getList @18grade_info\n{\n    "count": 1,\n    "list": [\n        {\n            "class": "1",\n            "created_at": "1683698914109",\n            "grade": "1",\n            "id": "9",\n            "literature": "93",\n            "mathematics": "18",\n            "overall_score": "56",\n            "physics": "57",\n            "score": "C",\n            "student": "tom"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can see that there is already a record in the data table, ",(0,t.jsx)(n.code,{children:"student"})," tom with\nan overall rating of 56 and a grade of C."]}),"\n",(0,t.jsx)(n.p,{children:"The above example is only for study and research purposes, you need to change\nthe relevant parameters according to the actual situation, such as the data\ntable write permission, contract modification permission, etc."}),"\n",(0,t.jsxs)(n.p,{children:["For example, if we want to specify that only one person can call this new record\ncontract and no one else can call it, we can set an ecosystem parameter\n",(0,t.jsx)(n.code,{children:"new_record_account"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"step-6-create-ecosystem-parameters",children:"Step 6 Create Ecosystem Parameters"}),"\n",(0,t.jsxs)(n.p,{children:["Calling the contract ",(0,t.jsx)(n.code,{children:"@1NewParameter"})," will create the eco-parameter\n",(0,t.jsx)(n.code,{children:"new_record_account"})," in the ",(0,t.jsx)(n.code,{children:"@1parameters"})," table, if you need to modify the\neco-parameter you can call ",(0,t.jsx)(n.code,{children:"@1EditParameter"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>callContract @1NewParameter {"Name": "new_record_account", "Value": "6667782293976713160", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n\n{\n    "block_id": 1416,\n    "hash": "12fc87ce6a70e2fc993ab9ffe623311f1c50edd1157595ce6183c38c93960cae",\n    "penalty": 0,\n    "err": "273"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We create an ecosystem parameter ",(0,t.jsx)(n.code,{children:"new_record_account"}),", set the value to keyId\n",(0,t.jsx)(n.code,{children:"6667782293976713160"}),", modify the permission\nto",(0,t.jsx)(n.code,{children:'ContractConditions("MainCondition")'})," which means the current ecosystem\ncreator can modify."]}),"\n",(0,t.jsxs)(n.p,{children:['When the transaction is executed successfully, the ecosystem parameter id of the\n"err" field is ',(0,t.jsx)(n.code,{children:"273"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"step-7-add-localization",children:"Step 7 add localization"}),"\n",(0,t.jsxs)(n.p,{children:["You can call the ",(0,t.jsx)(n.code,{children:"@1NewLangJoint"})," contract to create the localization parameter\n",(0,t.jsx)(n.code,{children:"account_not_access"}),", which will create the parameter in the",(0,t.jsx)(n.code,{children:"@1languages"})," table,\nand you can modify the localization parameter via ",(0,t.jsx)(n.code,{children:"@1EditLangJoint"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'callContract @1NewLangJoint {"Name": "account_not_access", "LocaleArr": ["en", "ja"], "ValueArr": ["Sorry, you do not have access to this action", "\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093"]}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"step-8-modify-the-contract",children:"Step 8 Modify the contract"}),"\n",(0,t.jsxs)(n.p,{children:["Next, we need to modify the ",(0,t.jsx)(n.code,{children:"conditions"})," section of the contract source code by\nadding the following code to ",(0,t.jsx)(n.code,{children:"conditions"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'conditions {\n  if EcosysParam("new_record_account") != $key_id {\n      warning LangRes("account_not_access")\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Call to modify the contract @1EditContract, where ",(0,t.jsx)(n.code,{children:"Id"})," is the contract id,\n",(0,t.jsx)(n.code,{children:"Value"}),": is the contract source code."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>callContract @1EditContract {"Id": 348, "Value": "contract NewRecord {\\n    data {\\n        Student string\\n        Grade int\\n        Class int\\n        Mathematics int\\n        Physics int\\n        Literature int\\n    }\\n    func getScore(a b c int) map{\\n        var m map\\n        var overallScore int\\n        overallScore = (a+b+c) / 3\\n        m[\\"overallScore\\"] = overallScore\\n        if overallScore >= $gradeTypeABest[\\"min\\"] && overallScore < $gradeTypeABest[\\"max\\"] {\\n            m[\\"score\\"] = \\"A+\\"\\n        }elif overallScore >= $gradeTypeA[\\"min\\"] && overallScore < $gradeTypeA[\\"max\\"] {\\n            m[\\"score\\"] = \\"A\\"\\n        }elif overallScore >= $gradeTypeBBest[\\"min\\"] && overallScore < $gradeTypeBBest[\\"max\\"] {\\n            m[\\"score\\"] = \\"B+\\"\\n        }elif overallScore >= $gradeTypeB[\\"min\\"] && overallScore < $gradeTypeB[\\"max\\"] {\\n            m[\\"score\\"] = \\"B\\"\\n        }elif overallScore >= $gradeTypeC[\\"min\\"] && overallScore < $gradeTypeC[\\"max\\"]{\\n            m[\\"score\\"] = \\"C\\"\\n        }else{\\n            m[\\"score\\"] = \\"Notset\\"\\n        }\\n        return m\\n    }\\n    func safeJsonDecode(m string) map {\\n        var res map\\n        if Size(m) > 0 {\\n            res = JSONDecode(m)\\n        }\\n        return res\\n    }\\n\\n    conditions {\\n        if EcosysParam(\\"new_record_account\\") != $key_id {\\n            warning LangRes(\\"account_not_access\\")\\n        }\\n        if Size($Student) == 0 {\\n            warning \\"Student Can not be empty\\"\\n        }\\n        if $Class <= 0{\\n            warning \\"Class cannot be less than or equal to zero\\"\\n        }\\n         if $Grade <= 0{\\n            warning \\"Grade cannot be less than or equal to zero\\"\\n        }\\n        if $Mathematics < 0 {\\n            warning \\"Mathematics cannot be less than zero\\"\\n        }\\n        if $Physics < 0 {\\n            warning \\"Physics cannot be less than zero\\"\\n        }\\n        if $Literature < 0 {\\n            warning \\"Literature cannot be less than zero\\"\\n        }\\n        if $Mathematics > 100 || $Physics > 100 ||  $Literature > 100{\\n            warning \\"Score cannot exceed 100\\"\\n        }\\n        var app map\\n        app = DBFind(\\"@1applications\\").Columns(\\"id,ecosystem\\").Where({\\"ecosystem\\": 18,\\"name\\":\\"GradesRecorder\\",\\"deleted\\":0}).Row()\\n        if !app {\\n            warning LangRes(\\"@1app_not_found\\")\\n        }\\n\\n        var app_id int\\n        app_id = Int(app[\\"id\\"])\\n        $eId = Int(app[\\"ecosystem\\"])\\n        $gradeBestType = AppParam(app_id, \\"grade_best_type\\", $eId)\\n        $gradeTypeABest = safeJsonDecode(AppParam(app_id, \\"grade_type_a+\\", $eId))\\n        $gradeTypeA = safeJsonDecode(AppParam(app_id, \\"grade_type_a\\", $eId))\\n        $gradeTypeBBest = safeJsonDecode(AppParam(app_id, \\"grade_type_b+\\", $eId))\\n        $gradeTypeB = safeJsonDecode(AppParam(app_id, \\"grade_type_b\\", $eId))\\n        $gradeTypeC = safeJsonDecode(AppParam(app_id, \\"grade_type_c\\", $eId))\\n    }\\n    action {\\n        var m map \\n        m = getScore($Mathematics,$Physics,$Literature)\\n        var in map\\n        in[\\"student\\"] = $Student\\n        in[\\"class\\"] = $Class\\n        in[\\"grade\\"] = $Grade\\n        in[\\"mathematics\\"] = $Mathematics\\n        in[\\"physics\\"] = $Physics \\n        in[\\"literature\\"] = $Literature \\n        in[\\"overall_score\\"] = m[\\"overallScore\\"]\\n        in[\\"score\\"] = m[\\"score\\"]\\n        in[\\"created_at\\"] = $time\\n        DBInsert(\\"@\\"+ Str($eId)+\\"grade_info\\", in)\\n    }\\n}"}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"step-9-modify-data-table-permissions",children:"Step 9 Modify data table permissions"}),"\n",(0,t.jsxs)(n.p,{children:["Here we need to change the insert permission of the data table, the original\npermission ",(0,t.jsx)(n.code,{children:'ContractConditions("MainCondition")'})," for the ecreator, and the\ncontract setting ",(0,t.jsx)(n.code,{children:"new_record_account"})," is not the ecreator. So just change\n",(0,t.jsx)(n.code,{children:'ContractConditions("MainCondition")'})," to specify that the contract can operate\non ",(0,t.jsx)(n.code,{children:'ContractAccess("@18NewRecord")'}),". Call the contract ",(0,t.jsx)(n.code,{children:"@1EditTable"})," to modify\nthe data table permissions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>callContract @1EditTable {"Name": "@18grade_info", "InsertPerm": "ContractAccess(\\"@18NewRecord\\")", "UpdatePerm": "ContractConditions(\\"MainCondition\\")", "ReadPerm": "true", "NewColumnPerm": "ContractConditions(\\"MainCondition\\")"}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then call the contract you just modified and create a new record."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1  >callContract @18NewRecord {"Student": "tom", "Grade": 1, "Class": 1, "Mathematics": 18, "Physics": 57, "Literature": 93}\n2\n3  {\n4      "block_id": 1435,\n5      "hash": "7d4b06d3738133f9c2ec775935478cd2d6c20fd04eca275769afd0f8e6a4f687",\n6      "penalty": 1,\n7      "err": "{\\"type\\":\\"warning\\",\\"error\\":\\"Sorry, you do not have access to this action\\"}"\n8  }\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can see that the localization parameter we just set,",(0,t.jsx)(n.code,{children:"account_not_access"}),", is\nworking."]}),"\n",(0,t.jsxs)(n.p,{children:["We found that the permission error is reported, the current user does not have\npermission to operate, we switch to the account with keyId\n",(0,t.jsx)(n.code,{children:"6667782293976713160"}),", we can get the current user's information through the\ncommand line tool",(0,t.jsx)(n.code,{children:"account info"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Set up the command line tool config.yml and switch to the account with keyId\n",(0,t.jsx)(n.code,{children:"6667782293976713160"})," After the setup is complete, call the contract again."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'>callContract @18NewRecord {"Student": "tini", "Grade": 1, "Class": 3, "Mathematics": 69, "Physics": 89, "Literature": 98}\n\n{\n    "block_id": 1436,\n    "hash": "93327dafb7bae9f9f66718eb87020a7bca4c00060f4bd0a243b49eea304c52e6",\n    "penalty": 0,\n    "err": ""\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The call completes, querying the data table via ",(0,t.jsx)(n.code,{children:"getList @18grade_info"}),", and the\nresult is as expected."]}),"\n",(0,t.jsxs)(n.p,{children:["We hope this article has helped you learn more about how the IBAX network works\nand how to write clear and secure ",(0,t.jsx)(n.code,{children:"Needle"})," code."]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-application-using-command-line-tools",children:"Deploy application using command line tools"}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, you will learn how to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#export-application",children:"Export Application"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#import-application",children:"Import Application"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Before starting this tutorial, you need to have an application of your own and\nknow the concept of ecosystem and application, you can refer to\n",(0,t.jsx)(n.a,{href:"#getting-started-guide",children:"Getting Started Guide"})," We will import the application\non the IBAX blockchain via the\n",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/ibax-cli",children:"command line tool"}),". Exporting an\napplication."]}),"\n",(0,t.jsx)(n.h3,{id:"export-application",children:"Export Application"}),"\n",(0,t.jsxs)(n.p,{children:["Call ",(0,t.jsx)(n.code,{children:"account info"})," to query the current account information, here the login\necid is ",(0,t.jsx)(n.code,{children:"9"}),", call ",(0,t.jsx)(n.code,{children:"getList"})," command to query the current ecid which\napplications."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'$ ibax-cli console\n\nWelcome to the IBAX console!\nTo exit, press ctrl-d or type exit\n>account info\n{\n    "public_key": "04d11ea197fe23152562c6f54c4...889c074dfd9080099982d8b2d4d100315e1cebc7",\n    "ecosystem_id": 9,\n    "key_id": 6660819...78795186,\n    "account": "0666-0819-...-7879-5186"\n}\n\n>getList @1applications -w={"ecosystem": 9}\n\n{\n    "count": 6,\n    "list": [\n        {\n            "conditions": "true",\n            "deleted": "0",\n            "ecosystem": "9",\n            "id": "36",\n            "name": "testapp",\n            "uuid": "00000000-0000-0000-0000-000000000000"\n        }\n        ...\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We can see that the current ecosystem has 6 applications, we use the",(0,t.jsx)(n.code,{children:"export"}),"\ncommand to export the application with ",(0,t.jsx)(n.code,{children:"id"})," of ",(0,t.jsx)(n.code,{children:"36"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>export 36 -f=./data.json\n\n{\n    "name": "./data.json",\n    "type": "application/json",\n    "value": ""\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The -f parameter here saves the exported application to the ",(0,t.jsx)(n.code,{children:"data.json"})," file in\nthe current directory."]}),"\n",(0,t.jsx)(n.p,{children:"If there is no -f parameter, the application data will be output in the command\nterminal."}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"export"})," command encapsulates the steps to export an application. You can\nuse the above command to export an application, or use the following steps, as\nfollows:"]}),"\n",(0,t.jsxs)(n.p,{children:["Calling the contract ",(0,t.jsx)(n.code,{children:"@1ExportNewApp"})," to export a new application will generate\na record in the ",(0,t.jsx)(n.code,{children:"1_buffer_data"})," table for the exported application."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1ExportNewApp {"ApplicationId": 36}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Call the contract ",(0,t.jsx)(n.code,{children:"@1Export"})," to export the application, find the selected\napplication in the ",(0,t.jsx)(n.code,{children:"1_buffer_data"})," table, and export all application resources\nto the generated json string."]}),"\n",(0,t.jsxs)(n.p,{children:["The generated json string will be written to the ",(0,t.jsx)(n.code,{children:"1_binaries"})," table of the\ncurrent ecosystem."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:">callContract @1Export\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Query the data in the ",(0,t.jsx)(n.code,{children:"1_binaries"})," table with the ",(0,t.jsx)(n.code,{children:"getList"})," command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>getList @1binaries -w={"name": "export", "account": "0666-0819-...-7879-5186", "ecosystem": 9, "app_id": 36} -l=1 -c="id,hash"\n\n{\n    "count": 1,\n    "list": [\n        {\n            "hash": "8542cb57b77e0ae2c...92c3e05dbbe35ab646789be5b8ba8",\n            "id": "14"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Get the binary id and hash."}),"\n",(0,t.jsxs)(n.p,{children:["Call the ",(0,t.jsx)(n.code,{children:"binaryVerify"})," command to export the binary file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>binaryVerify 14 8542cb57b77e0ae2c...92c3e05dbbe35ab646789be5b8ba8 -f=./data.json\n\n{\n    "name": "./data.json",\n    "type": "application/json",\n    "value": ""\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"import-application",children:"Import Application"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"import"})," command to import an application, with the ",(0,t.jsx)(n.code,{children:"-f"})," parameter to\nspecify the application file to be imported."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ ibax-cli console\n\nWelcome to the IBAX console!\nTo exit, press ctrl-d or type exit\n\n>import -f . /data.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"import"})," command encapsulates the steps to import an application, you can\nuse the above command to import an application."]}),"\n",(0,t.jsx)(n.p,{children:"Or use the following steps, which, for ease of study and research, are as\nfollows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Step 1: Calling the contract ",(0,t.jsx)(n.code,{children:"@1ImportUpload"})," to import a new application will\ngenerate a record in the ",(0,t.jsx)(n.code,{children:"1_buffer_data"})," table for the exported application\n",(0,t.jsx)(n.code,{children:"@1ImportUpload"}),". The contract parameter ",(0,t.jsx)(n.code,{children:"Data"})," is ",(0,t.jsx)(n.code,{children:"file"}),"\n",(0,t.jsx)(n.a,{href:"/docs/fr/topics/vm#types",children:"type"}),". Contains the keywords ",(0,t.jsx)(n.code,{children:"Name"})," file name\n(string), ",(0,t.jsx)(n.code,{children:"MimeType"})," file type (string), ",(0,t.jsx)(n.code,{children:"Body"})," ([]byte) file content. You\nneed to base64 encode the application file data and pass it into ",(0,t.jsx)(n.code,{children:"Body"}),", you\ncan use the ",(0,t.jsx)(n.code,{children:"base64Encode"})," command to base64 encode it."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>base64Encode -f=./data.json\n\nEncode:ewoJIm5hbWUiOiAid...CQkJIlR5cGUiOiAiY29udHJhY3RzIiwKCQkJIk5hbWUiOiAiSGVsbG9Xb3JsZCIsCgkJCSJWYWx1ZSI6...\n\n>callContract @1ImportUpload {"Data": {"Name": "filename", "MimeType": "mimeType", "Body": "ewoJIm5hbWUiOiAid...CQkJIlR5cGUiOiAiY29udHJhY3RzIiwKCQkJIk5hbWUiOiAiSGVsbG9Xb3JsZCIsCgkJCSJWYWx1ZSI6..."}}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Step 2: After the call is completed, use the ",(0,t.jsx)(n.code,{children:"getList"})," command to query the\ndata in the ",(0,t.jsx)(n.code,{children:"1_buffer_data"})," table."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>getList @1buffer_data -w={"key": "import", "account": "0666-0819-xxxx-7879-5186", "ecosystem": 19} -l=1 -c=value->\'data\'\n\n{\n    "count": 1,\n    "list": [\n        {\n            "id": "22",\n            "value.data": "[{"Data": "[a,b]"}, {"Data": "[c,d]"}]"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Step 3: Assemble the data in value.data->Data into a one-dimensional array,\n[a,b,c,d]. Then create a contract parameters file ",(0,t.jsx)(n.code,{children:"importParams.json"}),", with\nthe following content:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{ "Data": "[a,b,c,d]" }\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Step 4: Call the contract ",(0,t.jsx)(n.code,{children:"@1Import"})," to import the application data."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:">callContract @1Import -f=./importParams.json\n"})}),"\n",(0,t.jsx)(n.h2,{id:"ecosystem-configuration-using-command-line-tool",children:"Ecosystem configuration using command line tool"}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, you will learn how to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#apply-to-join-the-ecosystem",children:"Apply to join the ecosystem"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#add-ecosystem-members",children:"Add ecosystem members"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#role-management",children:"Role management"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#issuance-of-token",children:"Issuance of Token"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#eco-deduction",children:"Eco Deduction"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.ol,{start:"6",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#dao-governance-ecosystem",children:"DAO Governance Ecology"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Before starting this tutorial, you need to have an application of your own and\nknow the concept of ecosystem and application, you can refer to\n",(0,t.jsx)(n.a,{href:"#getting-started-guide",children:"Getting Started Guide"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["We will do the ecosystem configuration on the IBAX blockchain via\n",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/ibax-cli",children:"command line tool"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"apply-to-join-the-ecosystem",children:"Apply to join the ecosystem"}),"\n",(0,t.jsxs)(n.p,{children:["We can call the ",(0,t.jsx)(n.code,{children:"@1MembershipRequest"})," contract to request to join the ecosystem."]}),"\n",(0,t.jsx)(n.p,{children:"The following example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1MembershipRequest {"EcosystemId": 19}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["request to join the ecosystem with ecosystem id ",(0,t.jsx)(n.code,{children:"19"}),", the ",(0,t.jsx)(n.code,{children:"@1MembershipRequest"}),"\ncontract makes a restriction on calling the ecosystem, only in the base\necosystem can be called."]}),"\n",(0,t.jsx)(n.p,{children:"When the application is successful, the target ecosystem manager will receive an\napplication, and only when the application is approved by the ecosystem manager\nwill it be considered as joining the target ecosystem."}),"\n",(0,t.jsx)(n.p,{children:"Of course, if the target ecosystem is public, you can join the target ecosystem\ndirectly"}),"\n",(0,t.jsx)(n.h3,{id:"add-ecosystem-members",children:"Add ecosystem members"}),"\n",(0,t.jsxs)(n.p,{children:["When the ecosystem is just created, the ecosystem member is only the ecosystem\ncreator, when you need to invite other members to join, you need to know the\npublic key of the invited person, and then call the contract ",(0,t.jsx)(n.code,{children:"@1MembershipAdd"}),"\nto add members."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1MembershipAdd {"Keys": "04f2c1780ca0aa0f343d0e541c77811...3b0d5bf3a9903253aad6e78c966b5f91ffb32703884020"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If the ecosystem is public and allows anyone to join, you can set the ecosystem\nparameter ",(0,t.jsx)(n.code,{children:"free_membership"})," = 1, which is not public by default."]}),"\n",(0,t.jsx)(n.p,{children:"Once set up, you don't need to be approved to join your ecosystem."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1NewParameter {"Name": "free_membership", "Value": "1", "Conditions": "ContractConditions(\\"MainCondition\\")"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you don't set the parameter ",(0,t.jsx)(n.code,{children:"free_membership"}),", when other members apply to\njoin your ecosystem, you will receive an application notification."]}),"\n",(0,t.jsxs)(n.p,{children:["Call ",(0,t.jsx)(n.code,{children:"@1MembershipDecide"})," contract approval application, contract parameters\n",(0,t.jsx)(n.code,{children:"NotificId"})," is the notification id, 'Accept' is the resolution mark, resolution\nmark ",(0,t.jsx)(n.code,{children:"1"})," is passed."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1MembershipDecide {"NotificId": 6, "Accept": 1}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"freezing-of-accounts",children:"Freezing of accounts"}),"\n",(0,t.jsxs)(n.p,{children:["Call ",(0,t.jsx)(n.code,{children:"@1DeleteMember"})," contract to freeze the account, note that this operation\ncannot be restored."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1DeleteMember {"MemberAccount": "1539-2715-xxxx-1679-5385"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"role-management",children:"Role management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#new-role-creation",children:"New role creation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#adding-role-members",children:"Add Role Member"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#delete-role-members",children:"delete role member"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#modify-role-manager",children:"Modify role manager"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#delete-role",children:"delete role"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"new-role-creation",children:"New role creation"}),"\n",(0,t.jsxs)(n.p,{children:["Call ",(0,t.jsx)(n.code,{children:"@1RolesCreate"})," contract to create a new role, role name ",(0,t.jsx)(n.code,{children:"student"}),", type\n",(0,t.jsx)(n.code,{children:"2"})," (1 - Assignable; 2 - Elected by vote type; 3 - System)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1RolesCreate {"Name": "student", "Type": 2}\n{\n    "block_id": 1685,\n    "hash": "5321f2231a...d0d80158b62766395f14d0ff7",\n    "penalty": 0,\n    "err": "21"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The return result contains the role id ",(0,t.jsx)(n.code,{children:"21"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"adding-role-members",children:"Adding Role Members"}),"\n",(0,t.jsxs)(n.p,{children:["There are two methods, the first method, the ecosystem member to initiate the\napplication, call the contract ",(0,t.jsx)(n.code,{children:"@1RolesRequest"})," request to add as a member of\nthe role, where ",(0,t.jsx)(n.code,{children:"Rid"})," is the role id."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1RolesRequest {"Rid": 21}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the second method, the role manager assigns role members, and the role\nmanager calls the contract ",(0,t.jsx)(n.code,{children:"@1RolesAssign"})," to add members to the role."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1RolesAssign {"MemberAccount": "0666-7782-xxxx-7671- 3160", "Rid": 21}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"delete-role-members",children:"Delete role members"}),"\n",(0,t.jsx)(n.p,{children:"First we see what members a role has, which we can query via getList, as\nfollows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>getList @1roles_participants -w={"ecosystem": 18, "role->id": "21", "deleted": 0}\n\n{\n    "count": 3,\n    "list": [\n        {\n            "appointed": "{\\"account\\": \\"1273-2644-xxxx-5846-6598\\", \\"image_id\\": \\"0\\", \\"member_name\\": \\"founder\\"}",\n            "date_created": "1684916023",\n            "date_deleted": "0",\n            "deleted": "0",\n            "ecosystem": "18",\n            "id": "21",\n            "member": "{\\"account\\": \\"1273-2644-xxxx-5846-6598\\", \\"image_id\\": \\"0\\", \\"member_name\\": \\"founder\\"}",\n            "role": "{\\"id\\": \\"20\\", \\"name\\": \\"teacher\\", \\"type\\": \\"1\\", \\"image_id\\": \\"0\\"}"\n        }\n        ...\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["where the ",(0,t.jsx)(n.code,{children:"where"})," condition ",(0,t.jsx)(n.code,{children:"ecosystem"})," specifies ecosystem, ",(0,t.jsx)(n.code,{children:"role->id"}),"\nspecifies the role id, and ",(0,t.jsx)(n.code,{children:"deleted"}),": 0 specifies not deleted."]}),"\n",(0,t.jsxs)(n.p,{children:["We can see that we have 3 rows, if we want to remove the role with member\n",(0,t.jsx)(n.code,{children:"1273-2644-xxxx-5846-6598"}),", that is, the role with ",(0,t.jsx)(n.code,{children:"id"})," of ",(0,t.jsx)(n.code,{children:"21"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Administrators can call the contract ",(0,t.jsx)(n.code,{children:"@1RolesUnassign"})," to remove role members,\nas follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1RolesUnassign {"RowId": 21}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"modify-role-manager",children:"Modify Role Manager"}),"\n",(0,t.jsx)(n.p,{children:"Let's look at the current ecosystem roles."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>getList @1roles -w={"ecosystem": 18}\n\n{\n    "count": 5,\n    "list": [\n        {\n            "company_id": "0",\n            "creator": "{\\"account\\": \\"1273-2644-xxxx-5846-6598\\", \\"image_id\\": \\"0\\", \\"member_name\\": \\"founder\\"}",\n            "date_created": "1684910917",\n            "date_deleted": "0",\n            "default_page": "",\n            "deleted": "0",\n            "ecosystem": "18",\n            "id": "20",\n            "image_id": "0",\n            "role_name": "teacher",\n            "role_type": "1",\n            "roles_access": "[]"\n        }\n        ...\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["where ",(0,t.jsx)(n.code,{children:"roles_access"})," is the administrative role for the current role, which is\nan array and can have more than one."]}),"\n",(0,t.jsxs)(n.p,{children:["We add an administrative role to the role ",(0,t.jsx)(n.code,{children:"teacher"})," by calling the\n",(0,t.jsx)(n.code,{children:"@1RolesAccessManager"})," contract, where the contract parameters ",(0,t.jsx)(n.code,{children:"Action"}),"\nadministrative operator (",(0,t.jsx)(n.code,{children:"clean"}),", ",(0,t.jsx)(n.code,{children:"remove"}),", ",(0,t.jsx)(n.code,{children:"add"}),"),",(0,t.jsx)(n.code,{children:"Rid"})," the role ID to be\nmanaged, ",(0,t.jsx)(n.code,{children:"ManagerRid"})," the Rid Manager of the role."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1RolesAccessManager {"Action": "add", "Rid": 20, "ManagerRid": 13}\n\n{\n    "block_id": 1745,\n    "hash": "e2eb8ff0dc309ec7652db...bbbe58bca4ca574804e46c2f63653eb73104",\n    "penalty": 0,\n    "err": ""\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"delete-role",children:"Delete Role"}),"\n",(0,t.jsxs)(n.p,{children:["We can call the ",(0,t.jsx)(n.code,{children:"@1RolesDelete"})," contract to delete roles, where the contract\nparameters ",(0,t.jsx)(n.code,{children:"Rid"})," is the ID of the role to be managed and ",(0,t.jsx)(n.code,{children:"Ops"})," is the operator\n(",(0,t.jsx)(n.code,{children:"D"})," is delete ",(0,t.jsx)(n.code,{children:"R"})," is restore)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1RolesDelete {"Rid": 24, "Ops": "D"}\n\n{\n    "block_id": 1785,\n    "hash": "1ebf99a04f504fc3d2...4ecfbdfc419bf3dbf39df0013dca913f844",\n    "penalty": 0,\n    "err": ""\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"issuance-of-token",children:"Issuance of Token"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#create-ecosystem",children:"Create Ecology"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#installing-basic-applications",children:"Installing Basic Applications"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#token-issuance",children:"Token Issuance"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"create-ecosystem",children:"Create Ecology"}),"\n",(0,t.jsxs)(n.p,{children:["Create an ecosystem, call ",(0,t.jsx)(n.code,{children:"@1NewEcosystem"})," contract."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1NewEcosystem {"Name": "Test Ecosystem"}\n{\n    "block_id": 1787,\n    "hash": "384f35ef93243c9dd4f53b9298873b356b25b31cf7c6a6be7600ee7694d77006",\n    "penalty": 0,\n    "err": "21"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:'Then we modify the command line tool configuration to log into this newly\ncreated ecosystem: "21".'}),"\n",(0,t.jsx)(n.h4,{id:"installing-basic-applications",children:"Installing Basic Applications"}),"\n",(0,t.jsx)(n.p,{children:"Call the contract to install the base application, as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'1  >callContract @1PlatformAppsInstall\n2  >callContract @1RolesInstall\n3  >callContract @1AppInstall {"ApplicationId": 5}\n4  >callContract @1AppInstall {"ApplicationId": 6}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Line 1, install the platform application."}),"\n",(0,t.jsx)(n.p,{children:"Line 2, install default role."}),"\n",(0,t.jsxs)(n.p,{children:["Line 3-4, install the eco-configuration and token issuance application, where\nthe application id ",(0,t.jsx)(n.code,{children:"5,6"})," can be queried via getList as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>getList @1applications -w={"ecosystem": 1, "$or": [{"name": "Token emission"},{"name": "Ecosystems catalog"}]} -c="name,ecosystem"\n\n{\n    "count": 2,\n    "list": [\n        {\n            "ecosystem": "1",\n            "id": "5",\n            "name": "Token emission"\n        },\n        {\n            "ecosystem": "1",\n            "id": "6",\n            "name": "Ecosystems catalog"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"token-issuance",children:"Token Issuance"}),"\n",(0,t.jsxs)(n.p,{children:["Because it is a new ecosystem, you need to set up the token issuance, call\n",(0,t.jsx)(n.code,{children:"@1TeSettings"})," contract to specify the roles that can issue tokens."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1TeSettings {"RoleDeveloper": 30}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"RoleDeveloper"})," is the current ecosystem role id, which can be obtained\nthrough the ",(0,t.jsx)(n.code,{children:"@1roles"})," data table."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Token Issuance"})," Call ",(0,t.jsx)(n.code,{children:"@1NewToken"})," contract to issue tokens."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1NewToken {"Symbol": "TEST", "Name": "TEST Coin", "Amount": "10000000000000000" ,"Digits": "12"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where the contract parameters ",(0,t.jsx)(n.code,{children:"Symbol"})," is the token symbol, ",(0,t.jsx)(n.code,{children:"Name"})," is the token\nname, ",(0,t.jsx)(n.code,{children:"Amount"})," is the total amount, and ",(0,t.jsx)(n.code,{children:"Digits"})," is the precision."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Token Emission"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1TeEmission {"Amount": 1000000000000}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Destroy tokens"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1TeBurn {"Amount": 1000000000000}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Default token increment and token destruction is allowed, you can set it off by\n",(0,t.jsx)(n.code,{children:"@1TeChange"}),", where ",(0,t.jsx)(n.code,{children:"TypeChange"})," is the type (",(0,t.jsx)(n.code,{children:"emission"})," increment,",(0,t.jsx)(n.code,{children:"withdraw"}),"\ndestruction)."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Value"})," is the on/off status (",(0,t.jsx)(n.code,{children:"1"})," on, ",(0,t.jsx)(n.code,{children:"2"})," off), e.g: ",(0,t.jsx)(n.strong,{children:"Close Additions"})]}),"\n",(0,t.jsx)(n.p,{children:"Note: Cannot be turned on after closing."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1TeChange {"TypeChange": "emission", "Value": 2}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Turn off destruction"}),", if you want to turn on destruction again, just set\n",(0,t.jsx)(n.code,{children:"Value"})," to ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1TeChange {"TypeChange": "withdraw", "Value": 2}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"eco-deduction",children:"Eco Deduction"}),"\n",(0,t.jsxs)(n.p,{children:["Before setting up eco-deductions, you need to understand the IBAX fee model,\nwhich can be found in the ",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/whitepaper",children:"white paper"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["We first set the eco-wallet address, call the ",(0,t.jsx)(n.code,{children:"@1EditParameter"})," contract and\nmodify the eco-parameters."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1EditParameter {"Id": 334, "Value": "1273-2644-xxxx-5846-6598"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["where ",(0,t.jsx)(n.code,{children:"Id"})," is the ecowallet ",(0,t.jsx)(n.code,{children:"ecosystem_wallet"})," parameter id, which can be\nqueried as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>getList @1parameters -w={"ecosystem": 22, "name": "ecosystem_wallet"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Value"})," value is the address of the ecowallet that will be bound, and the\ncontract generates the gas fee, which is paid by that address. The address must\nhave enough tokens in the current ecosystem and needs to be agreed by the bound\naddress before the modification will be successful."]}),"\n",(0,t.jsxs)(n.p,{children:["Call ",(0,t.jsx)(n.code,{children:"@1EcoFeeModeManage"})," contract to set up multi-ecosystem deduction, as\nfollows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1EcoFeeModeManage {"FollowFuel": 0.01, "CombustionFlag": 1, "VmCostFlag": 2, "VmCostConversionRate": 100, "StorageConversionRate": 100, "StorageFlag": 2, "ExpediteFlag": 1}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Where the contract parameter fields are defined as follows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"FollowFuel"})," parameter is a multiple of the follow eco1 rate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CombustionFlag"})," whether to turn on ecotrade gas fee combustion, 1- no, 2-yes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CombustionPercent"})," Combustion percentage, only effective when gas fee\ncombustion is turned on, takes values 1 to 100, 0 when not turned on"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"VmCostFlag"})," VM cost flag, set direct or proxy payment, 1 - direct payment,\n2 - proxy payment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"StorageFlag"})," storage fee flag, set direct payment or proxy payment, 1 -\ndirect payment, 2 - proxy payment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ExpediteFlag"})," Expedited fee flag, set direct payment or payment on behalf of,\n1 - direct payment, 2 - payment on behalf of"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"VmCostConversionRate"})," Virtual machine cost conversion rate, 2 decimal places,\nonly in effect for proxy payments, greater than zero"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"StorageConversionRate"})," The storage cost conversion rate, 2 decimal places,\nonly in effect for proxy payments, greater than zero"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If you use the above settings, all transaction fees incurred by users invoking\ncontracts within the ecosystem will be paid by the ecosystem wallet of the\ncurrent ecosystem setup."}),"\n",(0,t.jsx)(n.p,{children:"All users only need to pay for the gas costs incurred within the ecosystem. Of\ncourse you can adjust the cost parameters according to your actual needs"}),"\n",(0,t.jsx)(n.h3,{id:"dao-governance-ecosystem",children:"DAO Governance Ecology"}),"\n",(0,t.jsx)(n.p,{children:"Before modifying to DAO governance ecosystem, you need to ensure that the\ncurrent ecosystem has issued tokens, and after modifying to DAO governance\necosystem, all proposals of the ecosystem will be voted on by the members of the\ngovernance committee."}),"\n",(0,t.jsx)(n.p,{children:"The DAO Governance Board is no longer managed by the eco-developers alone, and\nthe top 50 representatives of the eco-holdings are elected."}),"\n",(0,t.jsxs)(n.p,{children:["Call the ",(0,t.jsx)(n.code,{children:"@1EditControlMode"})," contract to change the eco governance mode to DAO\ngovernance mode."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1EditControlMode {"Value": 2}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where the ",(0,t.jsx)(n.code,{children:"Value"})," parameter ",(0,t.jsx)(n.code,{children:"1"})," represents the creator model ",(0,t.jsx)(n.code,{children:"2"})," represents the\nDAO governance model."]}),"\n",(0,t.jsx)(n.p,{children:"We can try to create an application."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'>callContract @1NewApplication {"Name": "testApp", "Conditions": "ContractConditions(\\"@1DeveloperCondition\\")"}\n'})}),"\n",(0,t.jsx)(n.p,{children:"At this point a DAO governance proposal is generated and voted on by the DAO\nGovernance Board before the application is created. A valid proposal requires a\n68% approval rate out of 75% of the votes cast."}),"\n",(0,t.jsx)(n.p,{children:"The scope of DAO governance includes:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add, delete and change applications, contracts, pages, code snippets, tabs,\nmenus, application parameters, data tables and fields"}),"\n",(0,t.jsx)(n.li,{children:"Modify multilingual"}),"\n",(0,t.jsx)(n.li,{children:"DAO and creator model switch"}),"\n",(0,t.jsx)(n.li,{children:"Edit ecosystem parameters"}),"\n",(0,t.jsx)(n.li,{children:"role, assign remove role members"}),"\n",(0,t.jsx)(n.li,{children:"Issue additional destruction currency"}),"\n",(0,t.jsx)(n.li,{children:"Modify the platform parameters"}),"\n",(0,t.jsx)(n.li,{children:"Modify ecosystem information"}),"\n",(0,t.jsx)(n.li,{children:"Modification of delayed contracts"}),"\n",(0,t.jsx)(n.li,{children:"Modify the voting template"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-applications-using-application-packaging-tool",children:"Deploy applications using application packaging tool"}),"\n",(0,t.jsxs)(n.p,{children:["Before starting this tutorial, you need to download\n",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/app-tool",children:"IBAX Application Packaging Tool"})," , we need\nto use this tool to package IBAX application."]}),"\n",(0,t.jsx)(n.p,{children:"We need to store the application files according to the following directory\nstructure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"- APP Name\n    - app_params\n        params1.csv\n        params2.csv\n        ...\n    - contracts\n        contract1.sim\n        contract2.sim\n        ...\n    - tables\n        tableName1.json\n        tableName2.json\n        ...\n    config.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"As shown below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"airdrop$ ls *\nconfig.json\n\napp_params:\ndedicated_account.csv  lock_percent.csv  per_period_sec.csv  period_count.csv\n\ncontracts:\nAddAirdrop.sim  ClaimAirdrop.sim  SpeedAirdrop.sim\n\ntables:\nairdrop_info.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"app_params"})," directory stores the application parameters file, named using\nthe parameter name + file format ",(0,t.jsx)(n.code,{children:".csv"}),", the content of the file is the\nparameter value."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"contracts"})," directory holds the contracts, in ",(0,t.jsx)(n.code,{children:".sim"})," file format, and the\ncontents of the file are the contract source code."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"tables"})," directory holds the application data table structure in ",(0,t.jsx)(n.code,{children:"json"})," file\nformat, as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "name": "account",\n    "conditions": "{\\"read\\": \\"true\\", \\"update\\": \\"ContractConditions(\\"MainCondition\\")\\"}",\n    "type": "varchar"\n  },\n  { "name": "balance_amount", "conditions": "true", "type": "money" },\n  { "name": "stake_amount", "conditions": "true", "type": "money" },\n  { "name": "surplus", "conditions": "true", "type": "number" },\n  { "name": "total_amount", "conditions": "true", "type": "money" }\n]\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"})," is the datatable field name, ",(0,t.jsx)(n.code,{children:"conditions"})," is the datatable field\npermission, and ",(0,t.jsx)(n.code,{children:"type"})," is the field type."]}),"\n",(0,t.jsx)(n.p,{children:"In step 1, we generate a config.json file and save it to the airdrop directory\nwith the following contents:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'{\n    "name": "Airdrop",\n    "conditions": "ContractConditions(\\"@1MainCondition\\")"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"name"})," is the name of the application, ",(0,t.jsx)(n.code,{children:"conditions"}),": is the permission to\nmodify the application, and then save it to the airdrop directory."]}),"\n",(0,t.jsxs)(n.p,{children:["Step 2, package the application, the following command will generate the\napplication ",(0,t.jsx)(n.code,{children:"airdrop.json"})," in the current directory, if you modify the contract\nor application parameters, you need to repackage the application."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ ./app-tool airdrop/\n"})}),"\n",(0,t.jsxs)(n.p,{children:["We can import the application via\n",(0,t.jsx)(n.a,{href:"https://github.com/IBAX-io/ibax-cli",children:"command line tool"})," as follows:"]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"import"})," command to import an application, with the ",(0,t.jsx)(n.code,{children:"-f"})," parameter to\nspecify the application file to be imported."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ ibax-cli console\n\nWelcome to the IBAX console!\nTo exit, press ctrl-d or type exit\n\n>import -f ./airdrop.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"Of course if you have an application, you can also generate the complete\ndirectory structure with the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ app-tool.exe airdrop.json\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4963:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/ibax-eco-3e92fa8716c19357067ad1d6f7249b49.png"},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(6540);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);